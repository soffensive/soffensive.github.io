<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - soffensive blog</title><link>https://soffensive.github.io/posts/</link><description>All Posts | soffensive blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 06 Apr 2025 19:27:16 +0200</lastBuildDate><atom:link href="https://soffensive.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Kali Linux Long Term Usage Part 2: Systemd, Partitions, and Swap Space</title><link>https://soffensive.github.io/posts/various/2025-04-06-kali-linux-long-term-2/</link><pubDate>Sun, 06 Apr 2025 19:27:16 +0200</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/various/2025-04-06-kali-linux-long-term-2/</guid><description><![CDATA[<p>I am using Kali Linux on a regular basis inside a virtual machine (VirtualBox) and I have maintained my image for a couple of years.</p>
<p>Over the last months and years, the booting time got worse and worse, until it reached the following startup time:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">└─$ systemd-analyze <span class="nb">time</span>                                                           
</span></span><span class="line"><span class="cl">Startup finished in 34.355s <span class="o">(</span>kernel<span class="o">)</span> + 1min 42.261s <span class="o">(</span>userspace<span class="o">)</span> <span class="o">=</span> 2min 16.617s 
</span></span><span class="line"><span class="cl">graphical.target reached after 1min 42.261s in userspace.
</span></span></code></pre></td></tr></table>
</div>
</div><p>In the first part of the series, we covered some optimizations with regard to disk usage. In this part, we want to determine why the system takes so much time to start up, even though it has sufficient hardware resources.</p>]]></description></item><item><title>Kali Linux Long Term Usage Part 1: Disk Usage</title><link>https://soffensive.github.io/posts/various/2025-03-30-kali-linux-long-term-1/</link><pubDate>Sun, 06 Apr 2025 15:27:16 +0200</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/various/2025-03-30-kali-linux-long-term-1/</guid><description><![CDATA[<p>I am using Kali Linux on a regular basis inside a virtual machine (VirtualBox) and I have maintained my image for a couple of years.</p>
<p>Over the last months and years, the booting time got worse and worse, until it reached the following startup time:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">└─$ systemd-analyze <span class="nb">time</span>                                                           
</span></span><span class="line"><span class="cl">Startup finished in 34.355s <span class="o">(</span>kernel<span class="o">)</span> + 1min 42.261s <span class="o">(</span>userspace<span class="o">)</span> <span class="o">=</span> 2min 16.617s 
</span></span><span class="line"><span class="cl">graphical.target reached after 1min 42.261s in userspace.
</span></span></code></pre></td></tr></table>
</div>
</div><p>Clearly, this is extraordinarily much, compared to other operating systems. The system has enough memory and computing resources, so clearly the culprit is inside the operating system.</p>]]></description></item><item><title>make and makefile</title><link>https://soffensive.github.io/posts/various/2024-12-26-make-and-makefile-security/</link><pubDate>Thu, 26 Dec 2024 05:35:00 -0700</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/various/2024-12-26-make-and-makefile-security/</guid><description><![CDATA[<p>I am a C/C++ newbie, but occassionally I have to compile or build projects. Since make (and Makefiles) are quite prevalent and sometimes they have to be adjusted due to potential errors, I had to learn more about them and want to share my learning publicly here.</p>
<h3 id="building-blocks">Building Blocks</h3>
<p>First of all, what are the involved building blocks of make and Makefiles?</p>
<ul>
<li><strong>make</strong>:
<ul>
<li>The GNU make utility. This is the executable that you actually run in order to execute a series of commands in order to modify files, typically compiling programs.</li>
<li>If you run the program without specifying an explicit input file with the -f option,  make will look for the makefiles GNUmakefile, makefile, and Makefile, in that order.</li>
<li>make updates a target if it depends on prerequisite files that have been modified since the target was last modified, or if the target does not exist.</li>
</ul>
</li>
<li><strong>makefile</strong>:
<ul>
<li>This is the input file for the make utility and consists of a series of instructions how to modify files.</li>
<li>A makefile can contain one or more rules.</li>
</ul>
</li>
<li><strong>rule</strong>:
<ul>
<li>A rule consists of one or more targets, prerequisites and commands.</li>
</ul>
</li>
<li><strong>target</strong>:
<ul>
<li>A target is a file name and typically, there is only one per rule.</li>
</ul>
</li>
<li><strong>prerequisite</strong>:
<ul>
<li>The prerequisites are file names, separated by spaces. These files need to exist before the commands for the target are run. These are also called dependencies.</li>
</ul>
</li>
<li><strong>command</strong>:
<ul>
<li>The commands are a series of steps typically to make the target. They need to start with a tab character, not spaces.</li>
</ul>
</li>
</ul>
<p>The general format of a <code>Makefile</code> is as follows:</p>]]></description></item><item><title>XXE with .NET in 2019</title><link>https://soffensive.github.io/posts/web-app-sec/2019-05-18-xxe-with-net-in-2019/</link><pubDate>Sat, 18 May 2019 05:35:00 -0700</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/web-app-sec/2019-05-18-xxe-with-net-in-2019/</guid><description><![CDATA[<p>After the seminal blog post by <a href="https://www.jardinesoftware.net/2016/05/26/xxe-and-net/" target="_blank" rel="noopener noreffer ">James Jardine</a> in 2016 on XXE exploitation in .NET applications back in 2016, Microsoft seems to have implemented some additional changes regarding the default behavior of XML parsers.</p>
<p>We work through the different XML methods provided and their corresponding vulnerable configurations. For all experiments, .NET framework 4.6 was chosen.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>TL;DR<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>In order to create an XXE vulnerability for applications using .NET framework 4.6+, you have to instantiate a vulnerable <code>XmlResolver</code> beforehand.</p>]]></description></item><item><title>Exploiting Blind File Reads / Path Traversal Vulnerabilities on Microsoft Windows Operating Systems</title><link>https://soffensive.github.io/posts/web-app-sec/2018-06-19-exploiting-blind-file-reads-path-traversal-vulnerabilities-on-microsoft-windows-operating-systems/</link><pubDate>Tue, 19 Jun 2018 01:31:00 -0700</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/web-app-sec/2018-06-19-exploiting-blind-file-reads-path-traversal-vulnerabilities-on-microsoft-windows-operating-systems/</guid><description>&lt;p>In a recent engagement I was confronted with a blind path traversal vulnerability on a server running with the Microsoft Windows operating system. That is, it was not possible to display folder contents but the complete file name and path had to be guessed. Due to the lack of a comprehensive website I was forced to gather information from various different sources.&lt;/p>
&lt;p>In this blog post, I want to summarize my findings and focus on the exploitation of  this kind of vulnerability.&lt;/p></description></item><item><title>Exploiting misconfigured CORS Null Origin</title><link>https://soffensive.github.io/posts/web-app-sec/2018-04-23-exploiting-misconfigured-cors-null-origin/</link><pubDate>Mon, 23 Apr 2018 08:04:00 -0700</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/web-app-sec/2018-04-23-exploiting-misconfigured-cors-null-origin/</guid><description><![CDATA[<p>Almost two years ago, in October 2016, James Kettle published an excellent <a href="http://blog.portswigger.net/2016/10/exploiting-cors-misconfigurations-for.html" target="_blank" rel="noopener noreffer ">blog post</a> about the various types of Cross-Origin Resource Sharing (CORS) misconfigurations and how they can be exploited.</p>
<p>Recently, I encountered a web application that allowed for two-way interaction with the so-called null origin. More precisely, when sending an HTTP request specifying the header:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="err">Origin: null
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>the server would respond with the following two HTTP headers:</p>]]></description></item><item><title>Using angr and symbolic execution for reverse engineering challenges (RPI MBE Labs)</title><link>https://soffensive.github.io/posts/ctf/2018-02-21-using-angr-and-symbolic-execution-for-reverse-engineering-challenges-rpi-mbe-labs/</link><pubDate>Wed, 21 Feb 2018 04:27:00 -0800</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/ctf/2018-02-21-using-angr-and-symbolic-execution-for-reverse-engineering-challenges-rpi-mbe-labs/</guid><description><![CDATA[<p>This blog posts will highlight how you can utilize the angr dynamic binary analysis framework and symbolic execution for reverse engineering tasks.</p>
<p>More precisely, we will look at the first two tasks in the <code>lab1</code> of the <a href="https://github.com/RPISEC/MBE/tree/master/src/lab01" target="_blank" rel="noopener noreffer ">RPISEC MBE labs</a>.</p>
<p>While angr&rsquo;s internals are quite complex and require substantial effort for mastering, getting started for our simple examples requires not too much knowledge.  </p>
<h2 id="lab1c">lab1C</h2>
<p>The first example we will look at is <code>lab1C</code> from <code>lab01</code>, which requires the user to enter a certain password:</p>]]></description></item><item><title>pwnable.kr: crypto1 challenge</title><link>https://soffensive.github.io/posts/ctf/2018-01-23-pwnable-kr-crypto1-challenge/</link><pubDate>Tue, 23 Jan 2018 03:29:00 -0800</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/ctf/2018-01-23-pwnable-kr-crypto1-challenge/</guid><description><![CDATA[<p>In the pwnable.kr challenge <code>crypto1</code> in the rookies section, we are given the following two files <code>client.py</code> and <code>server.py</code>:</p>
<h2 id="clientpy">client.py</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/python</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">base64</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">xmlrpclib</span>
</span></span><span class="line"><span class="cl"><span class="n">rpc</span> <span class="o">=</span> <span class="n">xmlrpclib</span><span class="o">.</span><span class="n">ServerProxy</span><span class="p">(</span><span class="s2">&#34;http://localhost:9100/&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">BLOCK_SIZE</span> <span class="o">=</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl"><span class="n">PADDING</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">pad</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span> <span class="o">+</span> <span class="p">(</span><span class="n">BLOCK_SIZE</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">%</span> <span class="n">BLOCK_SIZE</span><span class="p">)</span> <span class="o">*</span> <span class="n">PADDING</span>
</span></span><span class="line"><span class="cl"><span class="n">EncodeAES</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">c</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="n">c</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">pad</span><span class="p">(</span><span class="n">s</span><span class="p">))</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">DecodeAES</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">c</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span> <span class="n">c</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># server&#39;s secrets</span>
</span></span><span class="line"><span class="cl"><span class="n">key</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">iv</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">cookie</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># guest / 8b465d23cb778d3636bf6c4c5e30d031675fd95cec7afea497d36146783fd3a1</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">sanitize</span><span class="p">(</span><span class="n">arg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">arg</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="n">c</span> <span class="ow">not</span> <span class="ow">in</span> <span class="s1">&#39;1234567890abcdefghijklmnopqrstuvwxyz-_&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">AES128_CBC</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">cipher</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">,</span> <span class="n">iv</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">EncodeAES</span><span class="p">(</span><span class="n">cipher</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">request_auth</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">pw</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">packet</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="si">{0}</span><span class="s1">-</span><span class="si">{1}</span><span class="s1">-</span><span class="si">{2}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">pw</span><span class="p">,</span> <span class="n">cookie</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">e_packet</span> <span class="o">=</span> <span class="n">AES128_CBC</span><span class="p">(</span><span class="n">packet</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;sending encrypted data (</span><span class="si">{0}</span><span class="s1">)&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">e_packet</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">rpc</span><span class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span class="n">e_packet</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;---------------------------------------------------&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;-       PWNABLE.KR secure RPC login system        -&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;---------------------------------------------------&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;Input your ID&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="nb">id</span> <span class="o">=</span> <span class="n">raw_input</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;Input your PW&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="n">pw</span> <span class="o">=</span> <span class="n">raw_input</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">sanitize</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="o">==</span> <span class="kc">False</span> <span class="ow">or</span> <span class="n">sanitize</span><span class="p">(</span><span class="n">pw</span><span class="p">)</span> <span class="o">==</span> <span class="kc">False</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">print</span> <span class="s1">&#39;format error&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="n">os</span><span class="o">.</span><span class="n">_exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="n">cred</span> <span class="o">=</span> <span class="n">request_auth</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">pw</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">cred</span><span class="o">==</span><span class="mi">0</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">print</span> <span class="s1">&#39;you are not authenticated user&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="n">os</span><span class="o">.</span><span class="n">_exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">cred</span><span class="o">==</span><span class="mi">1</span> <span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="nb">print</span> <span class="s1">&#39;hi guest, login as admin&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">		<span class="n">os</span><span class="o">.</span><span class="n">_exit</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="s1">&#39;hi admin, here is your flag&#39;</span>
</span></span><span class="line"><span class="cl">	<span class="nb">print</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;flag&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="serverpy">server.py</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="ch">#!/usr/bin/python</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">xmlrpclib</span><span class="o">,</span> <span class="nn">hashlib</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">SimpleXMLRPCServer</span> <span class="kn">import</span> <span class="n">SimpleXMLRPCServer</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">Crypto.Cipher</span> <span class="kn">import</span> <span class="n">AES</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">BLOCK_SIZE</span> <span class="o">=</span> <span class="mi">16</span>
</span></span><span class="line"><span class="cl"><span class="n">PADDING</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\x00</span><span class="s1">&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">pad</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">s</span><span class="p">:</span> <span class="n">s</span> <span class="o">+</span> <span class="p">(</span><span class="n">BLOCK_SIZE</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="o">%</span> <span class="n">BLOCK_SIZE</span><span class="p">)</span> <span class="o">*</span> <span class="n">PADDING</span>
</span></span><span class="line"><span class="cl"><span class="n">EncodeAES</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">c</span><span class="p">,</span> <span class="n">s</span><span class="p">:</span> <span class="n">c</span><span class="o">.</span><span class="n">encrypt</span><span class="p">(</span><span class="n">pad</span><span class="p">(</span><span class="n">s</span><span class="p">))</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">DecodeAES</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">c</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span> <span class="n">c</span><span class="o">.</span><span class="n">decrypt</span><span class="p">(</span><span class="n">e</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s1">&#39;hex&#39;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># server&#39;s secrets</span>
</span></span><span class="line"><span class="cl"><span class="n">key</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">iv</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">cookie</span> <span class="o">=</span> <span class="s1">&#39;erased. but there is something on the real source code&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">AES128_CBC</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">cipher</span> <span class="o">=</span> <span class="n">AES</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">AES</span><span class="o">.</span><span class="n">MODE_CBC</span><span class="p">,</span> <span class="n">iv</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="n">DecodeAES</span><span class="p">(</span><span class="n">cipher</span><span class="p">,</span> <span class="n">msg</span><span class="p">)</span><span class="o">.</span><span class="n">rstrip</span><span class="p">(</span><span class="n">PADDING</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">authenticate</span><span class="p">(</span><span class="n">e_packet</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="n">packet</span> <span class="o">=</span> <span class="n">AES128_CBC</span><span class="p">(</span><span class="n">e_packet</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nb">id</span> <span class="o">=</span> <span class="n">packet</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">	<span class="n">pw</span> <span class="o">=</span> <span class="n">packet</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">packet</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;-&#39;</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span> <span class="o">!=</span> <span class="n">cookie</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="mi">0</span>	<span class="c1"># request is not originated from expected server</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">sha256</span><span class="p">(</span><span class="nb">id</span><span class="o">+</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="n">pw</span> <span class="ow">and</span> <span class="nb">id</span> <span class="o">==</span> <span class="s1">&#39;guest&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">sha256</span><span class="p">(</span><span class="nb">id</span><span class="o">+</span><span class="n">cookie</span><span class="p">)</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">==</span> <span class="n">pw</span> <span class="ow">and</span> <span class="nb">id</span> <span class="o">==</span> <span class="s1">&#39;admin&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">server</span> <span class="o">=</span> <span class="n">SimpleXMLRPCServer</span><span class="p">((</span><span class="s2">&#34;localhost&#34;</span><span class="p">,</span> <span class="mi">9100</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span> <span class="s2">&#34;Listening on port 9100...&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">server</span><span class="o">.</span><span class="n">register_function</span><span class="p">(</span><span class="n">authenticate</span><span class="p">,</span> <span class="s2">&#34;authenticate&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">server</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="analysis">Analysis</h2>
<p>Furthermore, there is a running instance of <code>client.py</code> at <code>pwnable.kr</code> on port <code>9006</code>. Our goal is to connect to this service and retrieve the flag.</p>]]></description></item><item><title>Practical Reverse Engineering Exercise Solutions: Page 79 / Exercise 11</title><link>https://soffensive.github.io/posts/practical-reverse-engineering/2017-12-07-practical-reverse-engineering-exercise-solutions-page-79-exercise-11/</link><pubDate>Thu, 07 Dec 2017 10:29:00 -0800</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/practical-reverse-engineering/2017-12-07-practical-reverse-engineering-exercise-solutions-page-79-exercise-11/</guid><description><![CDATA[<p>Exercise 11 on page 79 of the book Practical Reverse Engineering specifies the following ARM disassembly of a function called <code>mystery11</code> - the last exercise of the ARM chapter:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-nasm" data-lang="nasm"><span class="line"><span class="cl"><span class="err">01:</span> <span class="err">010185</span><span class="nf">B0</span>             <span class="nv">mystery11</span>
</span></span><span class="line"><span class="cl"><span class="err">02:</span> <span class="err">010185</span><span class="nf">B0</span> <span class="mi">2</span><span class="nv">D</span> <span class="nv">E9</span> <span class="nv">F8</span> <span class="mi">4</span><span class="nv">F</span>   <span class="nv">PUSH.W</span>   <span class="err">{</span><span class="nv">R3</span><span class="err">–</span><span class="nv">R11</span><span class="p">,</span><span class="nv">LR</span><span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">03:</span> <span class="err">010185</span><span class="nf">B4</span> <span class="mi">0</span><span class="nv">D</span> <span class="nv">F2</span> <span class="mi">20</span> <span class="mb">0B</span>   <span class="nv">ADDW</span>     <span class="nv">R11</span><span class="p">,</span> <span class="nb">SP</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x20</span>
</span></span><span class="line"><span class="cl"><span class="err">04:</span> <span class="err">010185</span><span class="nf">B8</span> <span class="nv">B0</span> <span class="nv">F9</span> <span class="mi">5</span><span class="nv">A</span> <span class="mi">30</span>   <span class="nv">LDRSH.W</span>  <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R0</span><span class="p">,</span><span class="err">#</span><span class="mh">0x5A</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">05:</span> <span class="err">010185</span><span class="nf">BC</span> <span class="mi">07</span> <span class="mi">46</span>         <span class="nv">MOV</span>      <span class="nv">R7</span><span class="p">,</span> <span class="nv">R0</span>
</span></span><span class="line"><span class="cl"><span class="err">06:</span> <span class="err">010185</span><span class="nf">BE</span> <span class="mi">90</span> <span class="mi">46</span>         <span class="nv">MOV</span>      <span class="nv">R8</span><span class="p">,</span> <span class="nv">R2</span>
</span></span><span class="line"><span class="cl"><span class="err">07:</span> <span class="err">010185</span><span class="nf">C0</span> <span class="mi">00</span> <span class="nv">EB</span> <span class="mi">83</span> <span class="mi">03</span>   <span class="nv">ADD.W</span>    <span class="nv">R3</span><span class="p">,</span> <span class="nv">R0</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span><span class="nv">LSL#2</span>
</span></span><span class="line"><span class="cl"><span class="err">08:</span> <span class="err">010185</span><span class="nf">C4</span> <span class="nv">D3</span> <span class="nv">F8</span> <span class="mi">84</span> <span class="nv">A0</span>   <span class="nv">LDR.W</span>    <span class="nv">R10</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">,</span><span class="err">#</span><span class="mh">0x84</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">09:</span> <span class="err">010185</span><span class="nf">C8</span> <span class="mi">7</span><span class="nv">B</span> <span class="mi">8</span><span class="nv">F</span>         <span class="nv">LDRH</span>     <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R7</span><span class="p">,</span><span class="err">#</span><span class="mh">0x3A</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">10:</span> <span class="err">010185</span><span class="nf">CA</span> <span class="mi">89</span> <span class="mi">46</span>         <span class="nv">MOV</span>      <span class="nv">R9</span><span class="p">,</span> <span class="nv">R1</span>
</span></span><span class="line"><span class="cl"><span class="err">11:</span> <span class="err">010185</span><span class="nf">CC</span> <span class="nv">CB</span> <span class="nv">B9</span>         <span class="nv">CBNZ</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">loc_1018602</span>
</span></span><span class="line"><span class="cl"><span class="err">12:</span> <span class="err">010185</span><span class="nf">CE</span> <span class="nv">B0</span> <span class="nv">F9</span> <span class="mi">5</span><span class="nv">A</span> <span class="mi">40</span>   <span class="nv">LDRSH.W</span>  <span class="nv">R4</span><span class="p">,</span> <span class="p">[</span><span class="nv">R0</span><span class="p">,</span><span class="err">#</span><span class="mh">0x5A</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">13:</span> <span class="err">010185</span><span class="nf">D2</span> <span class="mi">17</span> <span class="nv">F1</span> <span class="mi">20</span> <span class="mi">02</span>   <span class="nv">ADDS.W</span>   <span class="nv">R2</span><span class="p">,</span> <span class="nv">R7</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x20</span>
</span></span><span class="line"><span class="cl"><span class="err">14:</span> <span class="err">010185</span><span class="nf">D6</span> <span class="mi">00</span> <span class="nv">EB</span> <span class="mi">44</span> <span class="mi">03</span>   <span class="nv">ADD.W</span>    <span class="nv">R3</span><span class="p">,</span> <span class="nv">R0</span><span class="p">,</span> <span class="nv">R4</span><span class="p">,</span><span class="nv">LSL#1</span>
</span></span><span class="line"><span class="cl"><span class="err">15:</span> <span class="err">010185</span><span class="nf">DA</span> <span class="nv">B3</span> <span class="nv">F8</span> <span class="mi">5</span><span class="nv">C</span> <span class="mi">50</span>   <span class="nv">LDRH.W</span>   <span class="nv">R5</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">,</span><span class="err">#</span><span class="mh">0x5C</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">16:</span> <span class="err">010185</span><span class="nf">DE</span> <span class="mi">00</span> <span class="nv">EB</span> <span class="mi">84</span> <span class="mi">03</span>   <span class="nv">ADD.W</span>    <span class="nv">R3</span><span class="p">,</span> <span class="nv">R0</span><span class="p">,</span> <span class="nv">R4</span><span class="p">,</span><span class="nv">LSL#2</span>
</span></span><span class="line"><span class="cl"><span class="err">17:</span> <span class="err">010185</span><span class="nf">E2</span> <span class="nv">D3</span> <span class="nv">F8</span> <span class="mi">84</span> <span class="mi">00</span>   <span class="nv">LDR.W</span>    <span class="nv">R0</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">,</span><span class="err">#</span><span class="mh">0x84</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">18:</span> <span class="err">010185</span><span class="nf">E6</span> <span class="mi">83</span> <span class="mi">89</span>         <span class="nv">LDRH</span>     <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R0</span><span class="p">,</span><span class="err">#</span><span class="mh">0xC</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">19:</span> <span class="err">010185</span><span class="nf">E8</span> <span class="mi">06</span> <span class="mi">6</span><span class="nv">C</span>         <span class="nv">LDR</span>      <span class="nv">R6</span><span class="p">,</span> <span class="p">[</span><span class="nv">R0</span><span class="p">,</span><span class="err">#</span><span class="mh">0x40</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">20:</span> <span class="err">010185</span><span class="nf">EA</span> <span class="mi">03</span> <span class="nv">EB</span> <span class="mi">45</span> <span class="mi">03</span>   <span class="nv">ADD.W</span>    <span class="nv">R3</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span> <span class="nv">R5</span><span class="p">,</span><span class="nv">LSL#1</span>
</span></span><span class="line"><span class="cl"><span class="err">21:</span> <span class="err">010185</span><span class="nf">EE</span> <span class="mi">9</span><span class="nv">B</span> <span class="mi">19</span>         <span class="nv">ADDS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span> <span class="nv">R6</span>
</span></span><span class="line"><span class="cl"><span class="err">22:</span> <span class="err">010185</span><span class="nf">F0</span> <span class="mi">1</span><span class="nv">C</span> <span class="mi">78</span>         <span class="nv">LDRB</span>     <span class="nv">R4</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">23:</span> <span class="err">010185</span><span class="nf">F2</span> <span class="mi">5</span><span class="nv">B</span> <span class="mi">78</span>         <span class="nv">LDRB</span>     <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">,</span><span class="err">#</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">24:</span> <span class="err">010185</span><span class="nf">F4</span> <span class="mi">43</span> <span class="nv">EA</span> <span class="mi">04</span> <span class="mi">24</span>   <span class="nv">ORR.W</span>    <span class="nv">R4</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span> <span class="nv">R4</span><span class="p">,</span><span class="nv">LSL#8</span>
</span></span><span class="line"><span class="cl"><span class="err">25:</span> <span class="err">010185</span><span class="nf">F8</span> <span class="mi">43</span> <span class="mi">8</span><span class="nv">A</span>         <span class="nv">LDRH</span>     <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R0</span><span class="p">,</span><span class="err">#</span><span class="mh">0x12</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">26:</span> <span class="err">010185</span><span class="nf">FA</span> <span class="mi">23</span> <span class="mi">40</span>         <span class="nv">ANDS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">27:</span> <span class="err">010185</span><span class="nf">FC</span> <span class="mi">99</span> <span class="mi">19</span>         <span class="nv">ADDS</span>     <span class="nv">R1</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span> <span class="nv">R6</span>
</span></span><span class="line"><span class="cl"><span class="err">28:</span> <span class="err">010185</span><span class="nf">FE</span> <span class="nv">FD</span> <span class="nv">F7</span> <span class="mi">8</span><span class="nv">D</span> <span class="nv">FF</span>   <span class="nb">BL</span>       <span class="nv">sub_101651C</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">29:</span> <span class="err">01018602</span>      <span class="nf">loc_1018602</span>
</span></span><span class="line"><span class="cl"><span class="err">30:</span> <span class="err">01018602</span> <span class="nf">BA</span> <span class="mi">8</span><span class="nv">E</span>         <span class="nv">LDRH</span>     <span class="nv">R2</span><span class="p">,</span> <span class="p">[</span><span class="nv">R7</span><span class="p">,</span><span class="err">#</span><span class="mh">0x34</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">31:</span> <span class="err">01018604</span> <span class="nf">BB</span> <span class="mi">6</span><span class="nv">A</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R7</span><span class="p">,</span><span class="err">#</span><span class="mh">0x28</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">32:</span> <span class="err">01018606</span> <span class="nf">D0</span> <span class="mi">18</span>         <span class="nv">ADDS</span>     <span class="nv">R0</span><span class="p">,</span> <span class="nv">R2</span><span class="p">,</span> <span class="nv">R3</span>
</span></span><span class="line"><span class="cl"><span class="err">33:</span> <span class="err">01018608</span> <span class="err">9</span><span class="nf">A</span> <span class="nv">F8</span> <span class="mi">02</span> <span class="mi">30</span>   <span class="nv">LDRB.W</span>   <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R10</span><span class="p">,</span><span class="err">#</span><span class="mi">2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">34:</span> <span class="err">0101860</span><span class="nf">C</span> <span class="mb">0B</span> <span class="nv">B1</span>         <span class="nv">CBZ</span>      <span class="nv">R3</span><span class="p">,</span> <span class="nv">loc_1018612</span>
</span></span><span class="line"><span class="cl"><span class="err">35:</span> <span class="err">0101860</span><span class="nf">E</span> <span class="mi">00</span> <span class="mi">22</span>         <span class="nv">MOVS</span>     <span class="nv">R2</span><span class="p">,</span> <span class="err">#</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="err">36:</span> <span class="err">01018610</span> <span class="err">00</span> <span class="nf">E0</span>         <span class="nv">B</span>        <span class="nv">loc_1018614</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">37:</span> <span class="err">01018612</span>      <span class="nf">loc_1018612</span>
</span></span><span class="line"><span class="cl"><span class="err">38:</span> <span class="err">01018612</span> <span class="err">3</span><span class="nf">A</span> <span class="mi">6</span><span class="nv">A</span>         <span class="nv">LDR</span>      <span class="nv">R2</span><span class="p">,</span> <span class="p">[</span><span class="nv">R7</span><span class="p">,</span><span class="err">#</span><span class="mh">0x20</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">39:</span> <span class="err">01018614</span>      <span class="nf">loc_1018614</span>
</span></span><span class="line"><span class="cl"><span class="err">40:</span> <span class="err">01018614</span> <span class="nf">FB</span> <span class="mi">8</span><span class="nv">E</span>         <span class="nv">LDRH</span>     <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R7</span><span class="p">,</span><span class="err">#</span><span class="mh">0x36</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">41:</span> <span class="err">01018616</span> <span class="nf">B8</span> <span class="nv">F1</span> <span class="mi">00</span> <span class="mi">0</span><span class="nv">F</span>   <span class="nv">CMP.W</span>    <span class="nv">R8</span><span class="p">,</span> <span class="err">#</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="err">42:</span> <span class="err">0101861</span><span class="nf">A</span> <span class="mi">01</span> <span class="nv">D0</span>         <span class="nv">BEQ</span>      <span class="nv">loc_1018620</span>
</span></span><span class="line"><span class="cl"><span class="err">43:</span> <span class="err">0101861</span><span class="nf">C</span> <span class="mi">80</span> <span class="mi">18</span>         <span class="nv">ADDS</span>     <span class="nv">R0</span><span class="p">,</span> <span class="nv">R0</span><span class="p">,</span> <span class="nv">R2</span>
</span></span><span class="line"><span class="cl"><span class="err">44:</span> <span class="err">0101861</span><span class="nf">E</span> <span class="mi">9</span><span class="nv">B</span> <span class="mi">1</span><span class="nv">A</span>         <span class="nv">SUBS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R3</span><span class="p">,</span> <span class="nv">R2</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">45:</span> <span class="err">01018620</span>      <span class="nf">loc_1018620</span>
</span></span><span class="line"><span class="cl"><span class="err">46:</span> <span class="err">01018620</span> <span class="nf">C9</span> <span class="nv">F8</span> <span class="mi">00</span> <span class="mi">30</span>   <span class="nv">STR.W</span>    <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R9</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">47:</span> <span class="err">01018624</span> <span class="nf">BD</span> <span class="nv">E8</span> <span class="nv">F8</span> <span class="mi">8</span><span class="nv">F</span>   <span class="nv">POP.W</span>    <span class="err">{</span><span class="nv">R3</span><span class="err">–</span><span class="nv">R11</span><span class="p">,</span><span class="nv">PC</span><span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">48:</span> <span class="err">01018624</span>             <span class="c1">; End of function mystery11</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>According to the exercise description, the called subroutine <code>sub_101651C</code> in line 28 takes three arguments and does not return anything. Thus, we know the registers <code>R0</code>, <code>R1</code> and <code>R2</code> are prepared and passed to the function.</p>]]></description></item><item><title>Practical Reverse Engineering Exercise Solutions: Page 79 / Exercise 10</title><link>https://soffensive.github.io/posts/practical-reverse-engineering/2017-12-06-practical-reverse-engineering-exercise-solutions-page-79-exercise-10/</link><pubDate>Wed, 06 Dec 2017 06:19:00 -0800</pubDate><author>soffensive</author><guid>https://soffensive.github.io/posts/practical-reverse-engineering/2017-12-06-practical-reverse-engineering-exercise-solutions-page-79-exercise-10/</guid><description><![CDATA[<p>Exercise 10 on page 79 of the book Practical Reverse Engineering specifies the following ARM disassembly of a function called <code>mystery10</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-nasm" data-lang="nasm"><span class="line"><span class="cl"><span class="err">01:</span>             <span class="nf">mystery10</span>
</span></span><span class="line"><span class="cl"><span class="err">02:</span> <span class="err">2</span><span class="nf">D</span> <span class="nv">E9</span> <span class="mi">70</span> <span class="mi">48</span>   <span class="nv">PUSH.W</span>   <span class="err">{</span><span class="nv">R4</span><span class="err">–</span><span class="nv">R6</span><span class="p">,</span><span class="nv">R11</span><span class="p">,</span><span class="nv">LR</span><span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">03:</span> <span class="err">0</span><span class="nf">D</span> <span class="nv">F2</span> <span class="mi">0</span><span class="nv">C</span> <span class="mb">0B</span>   <span class="nv">ADDW</span>     <span class="nv">R11</span><span class="p">,</span> <span class="nb">SP</span><span class="p">,</span> <span class="err">#</span><span class="mh">0xC</span>
</span></span><span class="line"><span class="cl"><span class="err">04:</span> <span class="err">37</span> <span class="nf">F0</span> <span class="nv">CC</span> <span class="nv">F9</span>   <span class="nb">BL</span>       <span class="nv">__security_push_cookie</span>
</span></span><span class="line"><span class="cl"><span class="err">05:</span> <span class="err">84</span> <span class="nf">B0</span>         <span class="nv">SUB</span>      <span class="nb">SP</span><span class="p">,</span> <span class="nb">SP</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl"><span class="err">06:</span> <span class="err">0</span><span class="nf">D</span> <span class="mi">46</span>         <span class="nv">MOV</span>      <span class="nv">R5</span><span class="p">,</span> <span class="nv">R1</span>
</span></span><span class="line"><span class="cl"><span class="err">07:</span> <span class="err">00</span> <span class="err">24</span>         <span class="nf">MOVS</span>     <span class="nv">R4</span><span class="p">,</span> <span class="err">#</span><span class="mi">0</span>
</span></span><span class="line"><span class="cl"><span class="err">08:</span> <span class="err">10</span> <span class="err">2</span><span class="nf">D</span>         <span class="nv">CMP</span>      <span class="nv">R5</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl"><span class="err">09:</span> <span class="err">16</span> <span class="err">46</span>         <span class="nf">MOV</span>      <span class="nv">R6</span><span class="p">,</span> <span class="nv">R2</span>
</span></span><span class="line"><span class="cl"><span class="err">10:</span> <span class="err">0</span><span class="nf">C</span> <span class="nv">D3</span>         <span class="nv">BCC</span>      <span class="nv">loc_1010786</span>
</span></span><span class="line"><span class="cl"><span class="err">11:</span> <span class="err">1</span><span class="nf">A</span> <span class="mi">4</span><span class="nv">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">=</span><span class="nv">__imp_GetSystemTime</span>
</span></span><span class="line"><span class="cl"><span class="err">12:</span> <span class="err">68</span> <span class="err">46</span>         <span class="nf">MOV</span>      <span class="nv">R0</span><span class="p">,</span> <span class="nb">SP</span>
</span></span><span class="line"><span class="cl"><span class="err">13:</span> <span class="err">1</span><span class="nf">B</span> <span class="mi">68</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">14:</span> <span class="err">98</span> <span class="err">47</span>         <span class="nf">BLX</span>      <span class="nv">R3</span>
</span></span><span class="line"><span class="cl"><span class="err">15:</span> <span class="err">00</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_1C</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">16:</span> <span class="err">10</span> <span class="err">24</span>         <span class="nf">MOVS</span>     <span class="nv">R4</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl"><span class="err">17:</span> <span class="err">33</span> <span class="err">60</span>         <span class="nf">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">18:</span> <span class="err">01</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">19:</span> <span class="err">73</span> <span class="err">60</span>         <span class="nf">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="err">#</span><span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">20:</span> <span class="err">02</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_14</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">21:</span> <span class="nf">B3</span> <span class="mi">60</span>         <span class="nv">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="err">#</span><span class="mi">8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">22:</span> <span class="err">03</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_10</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">23:</span> <span class="nf">F3</span> <span class="mi">60</span>         <span class="nv">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="err">#</span><span class="mh">0xC</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">24:</span>      <span class="nf">loc_1010786</span>
</span></span><span class="line"><span class="cl"><span class="err">25:</span> <span class="err">2</span><span class="nf">B</span> <span class="mb">1B</span>         <span class="nv">SUBS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R5</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">26:</span> <span class="err">04</span> <span class="err">2</span><span class="nf">B</span>         <span class="nv">CMP</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">#</span><span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="err">27:</span> <span class="err">04</span> <span class="nf">D3</span>         <span class="nv">BCC</span>      <span class="nv">loc_1010796</span>
</span></span><span class="line"><span class="cl"><span class="err">28:</span> <span class="err">11</span> <span class="err">4</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">=</span><span class="nv">__imp_GetCurrentProcessId</span>
</span></span><span class="line"><span class="cl"><span class="err">29:</span> <span class="err">1</span><span class="nf">B</span> <span class="mi">68</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">30:</span> <span class="err">98</span> <span class="err">47</span>         <span class="nf">BLX</span>      <span class="nv">R3</span>
</span></span><span class="line"><span class="cl"><span class="err">31:</span> <span class="err">30</span> <span class="err">51</span>         <span class="nf">STR</span>      <span class="nv">R0</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="nv">R4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">32:</span> <span class="err">04</span> <span class="err">34</span>         <span class="nf">ADDS</span>     <span class="nv">R4</span><span class="p">,</span> <span class="err">#</span><span class="mi">4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">33:</span>      <span class="nf">loc_1010796</span>
</span></span><span class="line"><span class="cl"><span class="err">34:</span> <span class="err">2</span><span class="nf">B</span> <span class="mb">1B</span>         <span class="nv">SUBS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R5</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">35:</span> <span class="err">04</span> <span class="err">2</span><span class="nf">B</span>         <span class="nv">CMP</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">#</span><span class="mi">4</span>
</span></span><span class="line"><span class="cl"><span class="err">36:</span> <span class="err">04</span> <span class="nf">D3</span>         <span class="nv">BCC</span>      <span class="nv">loc_10107A6</span>
</span></span><span class="line"><span class="cl"><span class="err">37:</span> <span class="err">0</span><span class="nf">C</span> <span class="mi">4</span><span class="nv">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">=</span><span class="nv">__imp_GetTickCount</span>
</span></span><span class="line"><span class="cl"><span class="err">38:</span> <span class="err">1</span><span class="nf">B</span> <span class="mi">68</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">39:</span> <span class="err">98</span> <span class="err">47</span>         <span class="nf">BLX</span>      <span class="nv">R3</span>
</span></span><span class="line"><span class="cl"><span class="err">40:</span> <span class="err">30</span> <span class="err">51</span>         <span class="nf">STR</span>      <span class="nv">R0</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="nv">R4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">41:</span> <span class="err">04</span> <span class="err">34</span>         <span class="nf">ADDS</span>     <span class="nv">R4</span><span class="p">,</span> <span class="err">#</span><span class="mi">4</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">42:</span>      <span class="nf">loc_10107A6</span>
</span></span><span class="line"><span class="cl"><span class="err">43:</span> <span class="err">2</span><span class="nf">B</span> <span class="mb">1B</span>         <span class="nv">SUBS</span>     <span class="nv">R3</span><span class="p">,</span> <span class="nv">R5</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">44:</span> <span class="err">08</span> <span class="err">2</span><span class="nf">B</span>         <span class="nv">CMP</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">#</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="err">45:</span> <span class="err">09</span> <span class="nf">D3</span>         <span class="nv">BCC</span>      <span class="nv">loc_10107C0</span>
</span></span><span class="line"><span class="cl"><span class="err">46:</span> <span class="err">07</span> <span class="err">4</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="err">=</span><span class="nv">__imp_QueryPerformanceCounter</span>
</span></span><span class="line"><span class="cl"><span class="err">47:</span> <span class="err">68</span> <span class="err">46</span>         <span class="nf">MOV</span>      <span class="nv">R0</span><span class="p">,</span> <span class="nb">SP</span>
</span></span><span class="line"><span class="cl"><span class="err">48:</span> <span class="err">1</span><span class="nf">B</span> <span class="mi">68</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">49:</span> <span class="err">98</span> <span class="err">47</span>         <span class="nf">BLX</span>      <span class="nv">R3</span>
</span></span><span class="line"><span class="cl"><span class="err">50:</span> <span class="err">00</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_1C</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">51:</span> <span class="err">32</span> <span class="err">19</span>         <span class="nf">ADDS</span>     <span class="nv">R2</span><span class="p">,</span> <span class="nv">R6</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">52:</span> <span class="err">33</span> <span class="err">51</span>         <span class="nf">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R6</span><span class="p">,</span><span class="nv">R4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">53:</span> <span class="err">01</span> <span class="err">9</span><span class="nf">B</span>         <span class="nv">LDR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nb">SP</span><span class="p">,</span><span class="err">#</span><span class="mh">0x1C</span><span class="o">+</span><span class="nv">var_18</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="err">54:</span> <span class="err">08</span> <span class="err">34</span>         <span class="nf">ADDS</span>     <span class="nv">R4</span><span class="p">,</span> <span class="err">#</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="err">55:</span> <span class="err">53</span> <span class="err">60</span>         <span class="nf">STR</span>      <span class="nv">R3</span><span class="p">,</span> <span class="p">[</span><span class="nv">R2</span><span class="p">,</span><span class="err">#</span><span class="mi">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">56:</span>      <span class="nf">loc_10107C0</span>
</span></span><span class="line"><span class="cl"><span class="err">57:</span> <span class="err">20</span> <span class="err">46</span>         <span class="nf">MOV</span>      <span class="nv">R0</span><span class="p">,</span> <span class="nv">R4</span>
</span></span><span class="line"><span class="cl"><span class="err">58:</span> <span class="err">04</span> <span class="nf">B0</span>         <span class="nv">ADD</span>      <span class="nb">SP</span><span class="p">,</span> <span class="nb">SP</span><span class="p">,</span> <span class="err">#</span><span class="mh">0x10</span>
</span></span><span class="line"><span class="cl"><span class="err">59:</span> <span class="err">37</span> <span class="nf">F0</span> <span class="nv">A4</span> <span class="nv">F9</span>   <span class="nb">BL</span>              <span class="nv">__security_pop_cookie</span>
</span></span><span class="line"><span class="cl"><span class="err">60:</span> <span class="nf">BD</span> <span class="nv">E8</span> <span class="mi">70</span> <span class="mi">88</span>   <span class="nv">POP.W</span>    <span class="err">{</span><span class="nv">R4</span><span class="err">–</span><span class="nv">R6</span><span class="p">,</span><span class="nv">R11</span><span class="p">,</span><span class="nv">PC</span><span class="err">}</span>
</span></span><span class="line"><span class="cl"><span class="err">61:</span>             <span class="c1">; End of function mystery10</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Although the function looks complicated at first, we notice it does not contain any kind of loops and only executes sequentially with a couple of conditionals.</p>]]></description></item></channel></rss>