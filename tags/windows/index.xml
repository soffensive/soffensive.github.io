<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on soffensive blog</title><link>https://soffensive.github.io/tags/windows/</link><description>Recent content in Windows on soffensive blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 19 Jun 2018 01:31:00 -0700</lastBuildDate><atom:link href="https://soffensive.github.io/tags/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploiting Blind File Reads / Path Traversal Vulnerabilities on Microsoft Windows Operating Systems</title><link>https://soffensive.github.io/posts/web-app-sec/2018-06-19-exploiting-blind-file-reads-path-traversal-vulnerabilities-on-microsoft-windows-operating-systems/</link><pubDate>Tue, 19 Jun 2018 01:31:00 -0700</pubDate><guid>https://soffensive.github.io/posts/web-app-sec/2018-06-19-exploiting-blind-file-reads-path-traversal-vulnerabilities-on-microsoft-windows-operating-systems/</guid><description>&lt;p>In a recent engagement I was confronted with a blind path traversal vulnerability on a server running with the Microsoft Windows operating system. That is, it was not possible to display folder contents but the complete file name and path had to be guessed. Due to the lack of a comprehensive website I was forced to gather information from various different sources.&lt;/p>
&lt;p>In this blog post, I want to summarize my findings and focus on the exploitation ofÂ  this kind of vulnerability.&lt;/p></description></item></channel></rss>